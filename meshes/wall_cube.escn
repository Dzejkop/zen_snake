[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.5499999523162842);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_emission(vec4 emission_color, float strength,
        out vec3 emission_out, out float alpha_out) {
    emission_out = emission_color.rgb * strength;
    alpha_out = emission_color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Emission'
	// type: 'ShaderNodeEmission'
	// input sockets handling
	vec4 node0_in0_color = vec4(1.0, 1.0, 1.0, 1.0);
	float node0_in1_strength = float(1.0);
	// output sockets definitions
	float node0_emission_out1_alpha;
	vec3 node0_emission_out0_emission;
	
	node_emission(node0_in0_color, node0_in1_strength, node0_emission_out0_emission,
		node0_emission_out1_alpha);
	
	
	EMISSION = node0_emission_out0_emission;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.8, 0.9, 0.8, -0.8, 1.0, -0.8, -0.8, 1.0, 0.8, -0.8, 0.8, 0.9, 0.8, 0.8, 1.0, -0.8, 0.8, 1.0, -0.9, 0.8, -0.8, -1.0, 0.8, 0.8, -1.0, 0.8, -0.8, 0.8, -0.9, 0.8, 0.8, -1.0, -0.8, 0.8, -1.0, 0.8, 0.9, -0.8, 0.8, 1.0, 0.8, 0.8, 1.0, -0.8, 0.8, -0.8, -0.8, -0.9, 0.8, -0.8, -1.0, -0.8, -0.8, -1.0, -0.95, 0.95, -1.0, 0.8, 0.8, -1.0, -0.8, 0.8, -1.0, 0.95, 0.95, 1.0, -0.8, 0.8, 1.0, 0.8, 0.8, 1.0, 1.0, 0.95, 0.95, 1.0, -0.8, 0.8, 1.0, 0.8, 0.8, -1.0, 0.95, 0.95, -1.0, 0.8, -0.8, -1.0, 0.8, 0.8, -0.95, 1.0, 0.95, 0.8, 1.0, 0.8, -0.8, 1.0, 0.8, 0.95, 1.0, 0.95, 0.8, 1.0, -0.8, 0.95, -1.0, -0.95, 0.8, -1.0, 0.8, 0.8, -1.0, -0.8, 1.0, 0.95, -0.95, 1.0, 0.8, -0.8, 0.95, 0.95, -1.0, 0.8, -0.8, -1.0, -0.95, 0.95, 1.0, -0.8, -0.8, 1.0, -1.0, -0.95, 0.95, -1.0, -0.8, 0.8, -1.0, -0.95, -0.95, -1.0, -0.8, -0.8, 1.0, -0.95, -0.95, 1.0, -0.8, -0.8, -0.95, -1.0, 0.95, -0.8, -1.0, -0.8, -0.8, -1.0, 0.8, 0.95, 1.0, -0.95, -0.8, 1.0, -0.8, -0.95, -1.0, -0.95, -0.95, 1.0, -0.95, -0.95, -0.95, -1.0, -0.8, -0.8, -1.0, -1.0, 0.95, -0.95, 0.95, -0.95, -1.0, 0.95, -1.0, 0.95, -0.95, -0.95, 1.0, 0.8, -0.8, 1.0, 1.0, -0.95, 0.95, 0.95, 0.95, 1.0, 1.0, 0.95, 0.95, 0.95, 1.0, 0.95, 1.0, 0.95, -0.95, 0.95, 0.95, -1.0, 0.95, 1.0, -0.95, -1.0, 0.95, 0.95, -0.95, 0.95, 1.0, -0.95, 1.0, 0.95, -0.95, 0.95, -1.0, -1.0, 0.95, -0.95, -0.95, 1.0, -0.95, -0.95, -1.0, -0.95, -1.0, -0.95, -0.95, -0.95, -0.95, -1.0, -1.0, -0.95, 0.95, -0.95, -1.0, 0.95, -0.95, -0.95, 1.0, 0.95, -1.0, -0.95, 0.95, -0.95, -1.0, 1.0, -0.95, -0.95, 1.0, -0.95, 0.95, 0.95, -0.95, 1.0, 0.95, -1.0, 0.95, -0.95, -1.0, -0.95, -1.0, -0.95, 0.95, -1.0, -0.95, -0.95, 0.95, -1.0, -0.95, -0.95, -0.95, -1.0, 0.95, -0.95, -1.0, 1.0, 0.95, -0.95, 0.95, -0.95, -1.0, 0.95, 0.95, -1.0, -0.95, -0.95, 1.0, -1.0, 0.95, 0.95, -1.0, -0.95, 0.95, 0.95, 0.95, 1.0, 1.0, -0.95, 0.95, 1.0, 0.95, 0.95, -0.95, 0.95, -1.0, -1.0, -0.95, -0.95, -1.0, 0.95, -0.95, 0.95, 1.0, 0.95, -0.95, 0.95, 1.0, 0.95, 0.95, 1.0, 0.95, 1.0, -0.95, 1.0, 0.95, 0.95, 1.0, 0.95, -0.95, -0.95, -1.0, 0.95, 0.95, -0.95, 1.0, -0.95, -0.95, 1.0, -0.95, 1.0, 0.95, -1.0, 0.95, -0.95, -1.0, 0.95, 0.95, -0.95, 1.0, -0.95, 0.95, 0.95, -1.0, -0.95, 0.95, -1.0, 0.95, -1.0, 0.95, 1.0, -0.95, -0.95, 1.0, -0.95, 0.95, 0.95, -0.95, 1.0, 0.9, 0.8, 0.8, 1.0, 0.8, -0.8, 1.0, 0.8, 0.8, 0.9, 0.8, -0.8, 1.0, -0.8, -0.8, 1.0, 0.8, -0.8, 0.9, -0.8, -0.8, 1.0, -0.8, 0.8, 1.0, -0.8, -0.8, -0.8, -0.8, 0.9, -0.8, 0.8, 1.0, -0.8, -0.8, 1.0, 0.8, -0.8, 0.9, -0.8, -0.8, 1.0, 0.8, -0.8, 1.0, 0.8, 0.8, 0.9, 0.8, -0.8, 1.0, 0.8, 0.8, 1.0, 0.8, 0.8, -0.9, -0.8, 0.8, -1.0, 0.8, 0.8, -1.0, 0.8, -0.8, -0.9, 0.8, 0.8, -1.0, 0.8, -0.8, -1.0, -0.8, 0.8, -0.9, -0.8, -0.8, -1.0, -0.8, 0.8, -1.0, -0.9, 0.8, 0.8, -1.0, -0.8, 0.8, -1.0, 0.8, 0.8, -0.9, -0.8, -0.8, -1.0, 0.8, -0.8, -1.0, -0.8, -0.8, -0.9, -0.8, 0.8, -1.0, -0.8, -0.8, -1.0, -0.8, 0.8, 0.8, 0.9, 0.8, -0.8, 1.0, 0.8, 0.8, 1.0, 0.8, -0.8, 0.9, -0.8, 0.8, 1.0, -0.8, -0.8, 1.0, -0.8, 0.8, 0.9, -0.8, 0.8, 1.0, 0.8, 0.8, 1.0, -0.8, 0.8, -0.9, -0.8, -0.8, -1.0, -0.8, 0.8, -1.0, -0.8, -0.8, -0.9, 0.8, 0.8, -1.0, 0.8, -0.8, -1.0, 0.8, -0.8, -0.9, -0.8, -0.8, -1.0, 0.8, -0.8, -1.0, -0.8, -0.8, 0.9, -0.8, 0.8, 0.8, 0.9, -0.9, 0.8, 0.8, 0.8, -0.9, -0.8, 0.9, 0.8, 0.8, 0.8, -0.8, -0.9, -0.95, -1.0, -0.95, -0.95, -1.0, 0.95, -1.0, -0.95, 0.95, 0.95, -1.0, -0.95, -0.95, -1.0, -0.95, -0.95, -0.95, -1.0, 1.0, 0.95, -0.95, 1.0, -0.95, -0.95, 0.95, -0.95, -1.0, -0.95, -0.95, 1.0, -0.95, 0.95, 1.0, -1.0, 0.95, 0.95, 0.95, 0.95, 1.0, 0.95, -0.95, 1.0, 1.0, -0.95, 0.95, -0.95, 0.95, -1.0, -0.95, -0.95, -1.0, -1.0, -0.95, -0.95, 0.95, 1.0, 0.95, -0.95, 1.0, 0.95, -0.95, 0.95, 1.0, 0.95, 1.0, -0.95, 0.95, 1.0, 0.95, 1.0, 0.95, 0.95, -0.95, -1.0, 0.95, 0.95, -1.0, 0.95, 0.95, -0.95, 1.0, -0.95, 1.0, 0.95, -0.95, 1.0, -0.95, -1.0, 0.95, -0.95, -0.95, 1.0, -0.95, 0.95, 1.0, -0.95, 0.95, 0.95, -1.0, 0.95, -1.0, 0.95, 0.95, -1.0, -0.95, 1.0, -0.95, -0.95, 0.9, 0.8, -0.8, 0.9, -0.8, -0.8, 0.9, -0.8, 0.8, -0.8, 0.8, 0.9, -0.8, -0.8, 0.9, 0.8, -0.8, 0.9, -0.8, 0.8, -0.9, 0.8, 0.8, -0.9, -0.8, -0.8, -0.9, -0.9, -0.8, 0.8, -0.9, 0.8, -0.8, -0.9, -0.8, -0.8, -0.8, 0.9, 0.8, 0.8, 0.9, -0.8, 0.8, 0.9, 0.8, -0.8, -0.9, -0.8, 0.8, -0.9, 0.8, -0.8, -0.9, 0.8),
		Vector3Array(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, -0.707108, -0.707106, 0.0, -0.707108, -0.707106, 0.0, -0.707108, -0.707106, 0.0, 0.0, -0.707106, -0.707108, 0.0, -0.707106, -0.707108, 0.0, -0.707106, -0.707108, 0.707106, 0.0, -0.707108, 0.707106, 0.0, -0.707108, 0.707106, 0.0, -0.707108, -0.707108, 0.0, 0.707106, -0.707108, 0.0, 0.707106, -0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707106, -0.707108, 0.0, -0.707106, -0.707108, 0.0, -0.707106, -0.707108, 0.0, -0.707106, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.707108, 0.707106, 0.0, 0.707108, 0.707106, 0.0, 0.707108, 0.707106, 0.0, 0.0, -0.707106, 0.707108, 0.0, -0.707106, 0.707108, 0.0, -0.707106, 0.707108, -0.707108, 0.707106, 0.0, -0.707108, 0.707106, 0.0, -0.707108, 0.707106, 0.0, 0.0, 0.707106, -0.707108, 0.0, 0.707106, -0.707108, 0.0, 0.707106, -0.707108, 0.707108, -0.707106, 0.0, 0.707108, -0.707106, 0.0, 0.707108, -0.707106, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, -0.707106, -0.707108, 0.0, -0.707106, -0.707108, 0.0, -0.707106, -0.707108, 0.0, 0.0, -0.707108, -0.707106, 0.0, -0.707108, -0.707106, 0.0, -0.707108, -0.707106, 0.707108, 0.0, -0.707106, 0.707108, 0.0, -0.707106, 0.707108, 0.0, -0.707106, -0.707106, 0.0, 0.707108, -0.707106, 0.0, 0.707108, -0.707106, 0.0, 0.707108, 0.707106, 0.0, 0.707108, 0.707106, 0.0, 0.707108, 0.707106, 0.0, 0.707108, -0.707106, 0.0, -0.707108, -0.707106, 0.0, -0.707108, -0.707106, 0.0, -0.707108, 0.0, 0.707108, 0.707106, 0.0, 0.707108, 0.707106, 0.0, 0.707108, 0.707106, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.0, -0.707108, 0.707106, 0.0, -0.707108, 0.707106, 0.0, -0.707108, 0.707106, -0.707106, 0.707108, 0.0, -0.707106, 0.707108, 0.0, -0.707106, 0.707108, 0.0, 0.0, 0.707108, -0.707106, 0.0, 0.707108, -0.707106, 0.0, 0.707108, -0.707106, 0.707106, -0.707108, 0.0, 0.707106, -0.707108, 0.0, 0.707106, -0.707108, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 4.36258e-07, 1.0, 0.0, 1.0, -1.53832e-06, 1.0, 0.0, 1.0, 7.45059e-07, 1.0, 0.0, 1.0, -3.97092e-07, 1.0, 0.0, 1.0, 2.37615e-07, 1.0, 0.0, 1.0, -4.96706e-07, 1.0, 0.0, 1.0, 0.0, 1.0, -1.69026e-06, 1.0, 0.0, 1.0, -2.90181e-06, 1.0, 0.0, 1.0, -1.53832e-06, 1.0, 0.0, 1.0, -4.36258e-07, 1.0, 0.0, 1.0, 1.53832e-06, 1.0, 0.0, 1.0, -7.45059e-07, 1.0, -1.0, 0.0, -3.4916e-07, 1.0, -1.0, 0.0, 3.2908e-08, 1.0, -1.0, 0.0, -3.24863e-07, 1.0, -1.0, 0.0, -1.41665e-08, 1.0, -1.0, 0.0, -4.03099e-07, 1.0, 1.0, 0.0, 4.36258e-07, 1.0, 1.0, 0.0, -1.53832e-06, 1.0, 1.0, 0.0, 7.45059e-07, 1.0, 0.0, 1.0, 4.36258e-07, 1.0, 0.0, 1.0, 7.45059e-07, 1.0, -1.69026e-06, 1.0, 0.0, 1.0, -2.90181e-06, 1.0, 0.0, 1.0, 2.80042e-07, 1.0, 0.0, 1.0, 3.68801e-07, 1.0, 0.0, 1.0, 0.0, 1.0, 4.18278e-07, 1.0, 0.0, 1.0, 5.08997e-07, 1.0, 0.0, 1.0, 2.64599e-06, 1.0, 0.0, 1.0, 2.90181e-06, 1.0, 0.0, 1.0, -4.18278e-07, 1.0, 0.0, 1.0, -5.08997e-07, 1.0, 1.0, 0.0, -1.08196e-06, 1.0, 1.0, 0.0, -4.50415e-07, 1.0, 1.0, 0.0, -1.16659e-06, 1.0, -1.0, 0.0, -4.18278e-07, 1.0, -1.0, 0.0, 1.24176e-07, 1.0, 1.0, 0.0, -4.18278e-07, 1.0, -1.0, 0.0, 6.51201e-08, 1.0, -4.18278e-07, 1.0, 0.0, 1.0, -5.08997e-07, 1.0, 0.0, 1.0, 0.0, 1.0, 1.69026e-06, 1.0, -2.64599e-06, 1.0, 0.0, 1.0, 1.0, 0.0, -1.6766e-06, 1.0, 3.70097e-07, 1.0, 0.0, 1.0, 4.18871e-07, 1.0, 0.0, 1.0, 0.0, 1.0, -2.64599e-06, 1.0, 0.0, 0.707107, -0.707107, 1.0, 0.0, 0.707107, -0.707107, 1.0, 0.0, 0.707107, -0.707107, 1.0, -0.707107, 0.707107, 0.0, 1.0, -0.707107, 0.707107, 0.0, 1.0, -0.707107, 0.707107, 0.0, 1.0, 0.707107, 0.707107, 0.0, 1.0, 0.707107, 0.707107, 0.0, 1.0, 0.707107, 0.707107, 0.0, 1.0, 0.0, 0.707107, 0.707107, 1.0, 0.0, 0.707107, 0.707107, 1.0, 0.0, 0.707107, 0.707107, 1.0, 0.816497, -0.408248, -0.408248, 1.0, 0.816497, -0.408248, -0.408248, 1.0, 0.816497, -0.408248, -0.408248, 1.0, -0.408248, 0.816497, 0.408248, 1.0, -0.408248, 0.816497, 0.408248, 1.0, -0.408248, 0.816497, 0.408248, 1.0, 0.707107, 0.707107, 0.0, 1.0, 0.707107, 0.707107, 0.0, 1.0, 0.707107, 0.707107, 0.0, 1.0, 0.7071, 0.707114, 1.3504e-05, 1.0, 0.7071, 0.707114, 1.3504e-05, 1.0, 0.7071, 0.707114, 1.3504e-05, 1.0, -0.707106, 0.707108, -6.7435e-06, 1.0, -0.707106, 0.707108, -6.7435e-06, 1.0, -0.707106, 0.707108, -6.7435e-06, 1.0, 6.7435e-06, 0.707108, -0.707106, 1.0, 6.7435e-06, 0.707108, -0.707106, 1.0, 6.7435e-06, 0.707108, -0.707106, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.707108, -0.707106, 1.0, 0.0, 0.707108, -0.707106, 1.0, 0.0, 0.707108, -0.707106, 1.0, -0.707106, 0.707108, 0.0, 1.0, -0.707106, 0.707108, 0.0, 1.0, -0.707106, 0.707108, 0.0, 1.0, 0.0, 0.707108, 0.707106, 1.0, 0.0, 0.707108, 0.707106, 1.0, 0.0, 0.707108, 0.707106, 1.0, 0.707106, 0.707108, 0.0, 1.0, 0.707106, 0.707108, 0.0, 1.0, 0.707106, 0.707108, 0.0, 1.0, 0.0, 0.707108, 0.707106, 1.0, 0.0, 0.707108, 0.707106, 1.0, 0.0, 0.707108, 0.707106, 1.0, 0.707106, 0.707108, 6.7435e-06, 1.0, 0.707106, 0.707108, 6.7435e-06, 1.0, 0.707106, 0.707108, 6.7435e-06, 1.0, 4.18278e-07, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -0.707108, 0.707106, 0.0, 1.0, -0.707108, 0.707106, 0.0, 1.0, -0.707108, 0.707106, 0.0, 1.0, 0.0, 0.707106, -0.707108, 1.0, 0.0, 0.707106, -0.707108, 1.0, 0.0, 0.707106, -0.707108, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -6.27416e-08, 1.0, -6.27414e-08, 1.0, -6.27416e-08, 1.0, -6.27414e-08, 1.0, -6.27416e-08, 1.0, -6.27414e-08, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 3.54921e-06, 0.707106, -0.707108, 1.0, 3.54921e-06, 0.707106, -0.707108, 1.0, 3.54921e-06, 0.707106, -0.707108, 1.0, -0.707108, 0.707106, -7.09841e-06, 1.0, -0.707108, 0.707106, -7.09841e-06, 1.0, -0.707108, 0.707106, -7.09842e-06, 1.0, 0.0, 0.707106, 0.707108, 1.0, 0.0, 0.707106, 0.707108, 1.0, 0.0, 0.707106, 0.707108, 1.0, 0.707108, 0.707106, 7.09841e-06, 1.0, 0.707108, 0.707106, 7.09841e-06, 1.0, 0.707108, 0.707106, 7.09842e-06, 1.0, -7.09841e-06, 0.707106, 0.707108, 1.0, -7.09841e-06, 0.707106, 0.707108, 1.0, -7.09842e-06, 0.707106, 0.707108, 1.0, 0.707108, 0.707106, 0.0, 1.0, 0.707108, 0.707106, 0.0, 1.0, 0.707108, 0.707106, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.6, 0.775, 0.6, 0.975, 0.6, 0.775, 0.6, 0.525, 0.6, 0.725, 0.6, 0.525, 0.6, 0.275, 0.6, 0.475, 0.6, 0.275, 0.6, 0.0250001, 0.6, 0.225, 0.6, 0.0250001, 0.15, 0.275, 0.35, 0.275, 0.15, 0.275, 0.65, 0.475, 0.65, 0.275, 0.65, 0.475, 0.86875, 0.49375, 0.85, 0.275, 0.85, 0.475, 0.61875, 0.74375, 0.6, 0.525, 0.6, 0.725, 0.36875, 0.25625, 0.15, 0.275, 0.35, 0.275, 0.61875, 0.49375, 0.6, 0.275, 0.6, 0.475, 0.61875, 0.75625, 0.4, 0.775, 0.6, 0.775, 0.38125, 0.75625, 0.4, 0.975, 0.61875, 0.24375, 0.6, 0.0250001, 0.6, 0.225, 0.36875, 0.49375, 0.35, 0.475, 0.86875, 0.25625, 0.65, 0.275, 0.61875, 0.50625, 0.4, 0.525, 0.38125, 0.49375, 0.4, 0.475, 0.38125, 0.25625, 0.4, 0.275, 0.13125, 0.49375, 0.15, 0.475, 0.38125, 0.00624996, 0.4, 0.225, 0.4, 0.0249999, 0.38125, 0.99375, 0.6, 0.975, 0.38125, 0.24375, 0.61875, 0.99375, 0.63125, 0.49375, 0.65, 0.475, 0.61875, 0.25625, 0.63125, 0.25625, 0.61875, 0.00625002, 0.38125, 0.50625, 0.4, 0.725, 0.13125, 0.25625, 0.61875, 0.74375, 0.621875, 0.746875, 0.625, 0.74375, 0.36875, 0.49375, 0.371875, 0.496875, 0.375, 0.49375, 0.61875, 0.49375, 0.621875, 0.496875, 0.625, 0.49375, 0.86875, 0.49375, 0.871875, 0.496875, 0.875, 0.49375, 0.38125, 0.24375, 0.378125, 0.246875, 0.38125, 0.25, 0.38125, 0.49375, 0.378125, 0.496875, 0.38125, 0.5, 0.61875, 0.24375, 0.621875, 0.246875, 0.625, 0.24375, 0.13125, 0.25625, 0.128125, 0.253125, 0.125, 0.25625, 0.375, 0.25625, 0.38125, 0.49375, 0.38125, 0.25625, 0.625, 0.25625, 0.63125, 0.49375, 0.63125, 0.25625, 0.86875, 0.25, 0.63125, 0.25625, 0.86875, 0.25625, 0.38125, 0.50625, 0.61875, 0.49375, 0.38125, 0.49375, 0.36875, 0.25, 0.13125, 0.25625, 0.36875, 0.25625, 0.61875, 0.25, 0.38125, 0.25625, 0.61875, 0.25625, 0.625, 0.74375, 0.61875, 0.50625, 0.61875, 0.74375, 0.375, 0.49375, 0.36875, 0.25625, 0.36875, 0.49375, 0.375, 0.50625, 0.38125, 0.74375, 0.38125, 0.50625, 0.625, 0.49375, 0.61875, 0.25625, 0.61875, 0.49375, 0.875, 0.49375, 0.86875, 0.25625, 0.86875, 0.49375, 0.125, 0.25625, 0.13125, 0.49375, 0.13125, 0.25625, 0.38125, 0.74375, 0.35, 0.275, 0.35, 0.475, 0.35, 0.275, 0.35, 0.475, 0.15, 0.475, 0.35, 0.475, 0.15, 0.475, 0.15, 0.275, 0.15, 0.475, 0.4, 0.525, 0.6, 0.525, 0.4, 0.525, 0.4, 0.725, 0.4, 0.525, 0.4, 0.725, 0.6, 0.725, 0.4, 0.725, 0.6, 0.725, 0.85, 0.275, 0.85, 0.475, 0.85, 0.275, 0.65, 0.275, 0.85, 0.275, 0.65, 0.275, 0.85, 0.475, 0.65, 0.475, 0.85, 0.475, 0.6, 0.475, 0.4, 0.475, 0.6, 0.475, 0.4, 0.275, 0.6, 0.275, 0.4, 0.275, 0.4, 0.475, 0.4, 0.275, 0.4, 0.475, 0.4, 0.775, 0.6, 0.775, 0.4, 0.775, 0.6, 0.975, 0.4, 0.975, 0.6, 0.975, 0.4, 0.975, 0.4, 0.775, 0.4, 0.975, 0.6, 0.225, 0.4, 0.225, 0.6, 0.225, 0.4, 0.0249999, 0.6, 0.0250001, 0.4, 0.0249999, 0.4, 0.225, 0.4, 0.0249999, 0.4, 0.225, 0.6, 0.975, 0.6, 0.725, 0.6, 0.475, 0.6, 0.225, 0.35, 0.275, 0.65, 0.275, 0.375, 0.25625, 0.375, 0.49375, 0.38125, 0.49375, 0.625, 0.25625, 0.625, 0.49375, 0.63125, 0.49375, 0.86875, 0.25, 0.63125, 0.25, 0.63125, 0.25625, 0.38125, 0.50625, 0.61875, 0.50625, 0.61875, 0.49375, 0.36875, 0.25, 0.13125, 0.25, 0.13125, 0.25625, 0.61875, 0.25, 0.38125, 0.25, 0.38125, 0.25625, 0.625, 0.74375, 0.625, 0.50625, 0.61875, 0.50625, 0.375, 0.49375, 0.375, 0.25625, 0.36875, 0.25625, 0.375, 0.50625, 0.375, 0.74375, 0.38125, 0.74375, 0.625, 0.49375, 0.625, 0.25625, 0.61875, 0.25625, 0.875, 0.49375, 0.875, 0.25625, 0.86875, 0.25625, 0.125, 0.25625, 0.125, 0.49375, 0.13125, 0.49375, 0.35, 0.475, 0.15, 0.475, 0.15, 0.275, 0.6, 0.525, 0.4, 0.525, 0.4, 0.725, 0.85, 0.475, 0.85, 0.275, 0.65, 0.475, 0.4, 0.475, 0.6, 0.275, 0.4, 0.275, 0.6, 0.775, 0.4, 0.975, 0.4, 0.775, 0.4, 0.225, 0.6, 0.0250001, 0.4, 0.0249999),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 31, 34, 35, 37, 36, 38, 39, 26, 40, 19, 41, 42, 22, 43, 44, 45, 29, 46, 47, 45, 48, 49, 39, 50, 52, 51, 53, 34, 54, 55, 51, 37, 56, 54, 32, 57, 58, 20, 59, 28, 47, 60, 41, 58, 61, 36, 52, 62, 43, 63, 64, 25, 49, 65, 67, 66, 68, 70, 69, 71, 73, 72, 74, 76, 75, 77, 79, 78, 80, 82, 81, 83, 85, 84, 86, 88, 87, 89, 91, 90, 92, 94, 93, 95, 97, 96, 98, 100, 99, 101, 103, 102, 104, 106, 105, 107, 109, 108, 110, 112, 111, 113, 115, 114, 116, 118, 117, 119, 121, 120, 122, 124, 123, 125, 63, 23, 126, 128, 127, 129, 131, 130, 132, 134, 133, 135, 137, 136, 138, 140, 139, 141, 143, 142, 144, 146, 145, 147, 149, 148, 150, 152, 151, 153, 155, 154, 156, 158, 157, 159, 161, 160, 162, 164, 163, 165, 167, 166, 168, 170, 169, 171, 173, 172, 174, 176, 175, 177, 179, 178, 0, 1, 180, 3, 4, 181, 6, 7, 182, 9, 10, 183, 12, 13, 184, 15, 16, 185, 18, 19, 40, 21, 22, 42, 24, 25, 64, 27, 28, 59, 30, 31, 33, 33, 34, 53, 35, 36, 61, 38, 26, 24, 40, 41, 60, 42, 43, 62, 44, 29, 27, 46, 45, 44, 48, 39, 38, 50, 51, 55, 53, 54, 56, 55, 37, 35, 56, 32, 30, 57, 20, 18, 59, 47, 46, 60, 58, 57, 61, 52, 50, 62, 63, 125, 64, 49, 48, 186, 188, 187, 189, 191, 190, 192, 194, 193, 195, 197, 196, 198, 200, 199, 201, 203, 202, 204, 206, 205, 207, 209, 208, 210, 212, 211, 213, 215, 214, 216, 218, 217, 219, 221, 220, 125, 23, 21, 126, 127, 222, 129, 130, 223, 132, 133, 224, 135, 136, 225, 138, 139, 226, 141, 142, 227, 144, 145, 228, 147, 148, 229, 150, 151, 230, 153, 154, 231, 156, 157, 232, 159, 160, 233, 162, 163, 234, 165, 166, 235, 168, 169, 236, 171, 172, 237, 174, 175, 238, 177, 178, 239)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.9, 0.8, -0.8, 0.9, -0.8, 0.8, 0.9, -0.8, -0.8, 0.8, 0.8, 0.9, -0.8, -0.8, 0.9, 0.8, -0.8, 0.9, -0.8, 0.8, -0.9, 0.8, -0.8, -0.9, -0.8, -0.8, -0.9, -0.9, 0.8, 0.8, -0.9, -0.8, -0.8, -0.9, -0.8, 0.8, -0.8, 0.9, -0.8, 0.8, 0.9, 0.8, 0.8, 0.9, -0.8, 0.8, -0.9, -0.8, -0.8, -0.9, 0.8, -0.8, -0.9, -0.8, 0.9, 0.8, 0.8, -0.8, 0.8, 0.9, 0.8, 0.8, -0.9, -0.9, 0.8, -0.8, -0.8, 0.9, 0.8, 0.8, -0.9, 0.8),
		Vector3Array(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0),
		FloatArray(0.0, 1.0, 4.65662e-07, 1.0, 0.0, 1.0, 4.65662e-07, 1.0, 0.0, 1.0, 0.0, 1.0, -1.39698e-07, 1.0, 0.0, 1.0, -1.39698e-07, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 4.65662e-07, 1.0, 0.0, 1.0, 4.65662e-07, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -4.65662e-07, 1.0, 0.0, 1.0, -4.65662e-07, 1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, 9.31323e-08, 1.0, -1.0, 0.0, 9.31323e-08, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 4.65662e-07, 1.0, 1.0, 0.0, 4.65662e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 9.31323e-07, 1.0, -2.79397e-07, 1.0, 0.0, 1.0, 9.31323e-07, 1.0, 0.0, 1.0, 0.0, 1.0, -9.31323e-07, 1.0, -1.0, 0.0, 1.86265e-07, 1.0, 1.0, 0.0, 9.31323e-07, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.35, 0.475, 0.15, 0.275, 0.15, 0.475, 0.6, 0.725, 0.4, 0.525, 0.4, 0.725, 0.85, 0.475, 0.65, 0.275, 0.65, 0.475, 0.6, 0.475, 0.4, 0.275, 0.4, 0.475, 0.6, 0.975, 0.4, 0.775, 0.4, 0.975, 0.6, 0.225, 0.4, 0.0249999, 0.4, 0.225, 0.35, 0.275, 0.6, 0.525, 0.85, 0.275, 0.6, 0.275, 0.6, 0.775, 0.6, 0.0250001),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 0, 1, 18, 3, 4, 19, 6, 7, 20, 9, 10, 21, 12, 13, 22, 15, 16, 23)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
