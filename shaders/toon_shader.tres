[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeFresnel" id=1]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, false, 3, 10.0 ]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "view"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 100.0 ]
operator = 5

[resource]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = NORMAL;

// Input:4
	vec3 n_out4p0;
	n_out4p0 = VIEW;

// Fresnel:2
	bool n_in2p2 = false;
	float n_in2p3 = 10.00000;
	float n_out2p0;
	n_out2p0 = n_in2p2 ? (pow(clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in2p3)) : (pow(1.0 - clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in2p3));
// ScalarFunc:5
	float n_out5p0;
	n_out5p0 = 1.0-n_out2p0;

// ScalarOp:6
	float n_in6p1 = 100.00000;
	float n_out6p0;
	n_out6p0 = pow( n_out5p0 , n_in6p1 );

// Output:0
	ALBEDO = vec3(n_out6p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -450, 9.25 )
nodes/fragment/0/position = Vector2( 680, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -80, 300 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -340, 220 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -340, 320 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 160, 300 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 420, 200 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 2, 1, 2, 0, 5, 0, 5, 0, 6, 0, 6, 0, 0, 0 )
