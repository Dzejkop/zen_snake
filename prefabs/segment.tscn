[gd_scene load_steps=26 format=2]

[ext_resource path="res://scripts/segment.gd" type="Script" id=1]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="VisualShaderNodeTexture" id=14]
source = 1

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="OpenSimplexNoise" id=19]

[sub_resource type="NoiseTexture" id=20]
seamless = true
noise = SubResource( 19 )

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = SubResource( 20 )

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=23]
constant = 0.01

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=25]

[sub_resource type="VisualShaderNodeColorConstant" id=31]

[sub_resource type="VisualShaderNodeVectorClamp" id=33]

[sub_resource type="VisualShaderNodeVectorInterp" id=34]

[sub_resource type="VisualShaderNodeFresnel" id=35]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, false, 3, 0.8 ]

[sub_resource type="VisualShaderNodeInput" id=36]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "view"

[sub_resource type="VisualShaderNodeScalarUniform" id=42]
uniform_name = "ratio"

[sub_resource type="VisualShaderNodeVectorOp" id=43]
operator = 2

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
uniform sampler2D tex_frg_16;uniform float ratio;



void vertex() {
// Output:0

}

void fragment() {
// Color:26
	vec3 n_out26p0;
	float n_out26p1;
	n_out26p0 = vec3(1.000000,1.000000,1.000000);
	n_out26p1 = 1.000000;

// Input:12
	vec3 n_out12p0;
	n_out12p0 = vec3(SCREEN_UV,0.0);

// Input:19
	vec3 n_out19p0;
	n_out19p0 = vec3(UV,0.0);

// Input:15
	float n_out15p0;
	n_out15p0 = TIME;

// ScalarOp:14
	float n_in14p1 = 0.10000;
	float n_out14p0;
	n_out14p0 = n_out15p0 * n_in14p1;

// VectorOp:13
	vec3 n_out13p0;
	n_out13p0 = n_out19p0 + vec3(n_out14p0);

// Texture:16
	vec3 n_out16p0;
	float n_out16p1;
	vec4 tex_frg_16_read = texture( tex_frg_16 , n_out13p0.xy );
	n_out16p0 = tex_frg_16_read.rgb;
	n_out16p1 = tex_frg_16_read.a;

// Scalar:18
	float n_out18p0;
	n_out18p0 = 0.010000;

// VectorOp:17
	vec3 n_out17p0;
	n_out17p0 = n_out16p0 * vec3(n_out18p0);

// VectorOp:20
	vec3 n_out20p0;
	n_out20p0 = n_out12p0 + n_out17p0;

// Texture:11
	vec3 n_out11p0;
	float n_out11p1;
	{
		vec4 _tex_read = textureLod( SCREEN_TEXTURE , n_out20p0.xy , 0.0 );
		n_out11p0 = _tex_read.rgb;
		n_out11p1 = _tex_read.a;
	}

// Input:31
	vec3 n_out31p0;
	n_out31p0 = NORMAL;

// Input:32
	vec3 n_out32p0;
	n_out32p0 = VIEW;

// Fresnel:30
	bool n_in30p2 = false;
	float n_in30p3 = 0.80000;
	float n_out30p0;
	n_out30p0 = n_in30p2 ? (pow(clamp(dot(n_out31p0, n_out32p0), 0.0, 1.0), n_in30p3)) : (pow(1.0 - clamp(dot(n_out31p0, n_out32p0), 0.0, 1.0), n_in30p3));
// VectorOp:36
	vec3 n_out36p0;
	n_out36p0 = n_out11p0 * vec3(n_out30p0);

// ScalarUniform:35
	float n_out35p0;
	n_out35p0 = ratio;

// VectorMix:29
	vec3 n_out29p0;
	n_out29p0 = mix( n_out26p0 , n_out36p0 , vec3(n_out35p0) );

// VectorClamp:28
	vec3 n_in28p1 = vec3(0.00000,0.00000,0.00000);
	vec3 n_in28p2 = vec3(1.00000,1.00000,1.00000);
	vec3 n_out28p0;
	n_out28p0 = clamp( n_out29p0, n_in28p1, n_in28p2 );

// Output:0
	ALBEDO = n_out26p0;
	EMISSION = n_out28p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 9, 72.75 )
nodes/fragment/0/position = Vector2( 1040, 220 )
nodes/fragment/11/node = SubResource( 14 )
nodes/fragment/11/position = Vector2( 180, 460 )
nodes/fragment/12/node = SubResource( 15 )
nodes/fragment/12/position = Vector2( -240, 460 )
nodes/fragment/13/node = SubResource( 16 )
nodes/fragment/13/position = Vector2( -760, 560 )
nodes/fragment/14/node = SubResource( 17 )
nodes/fragment/14/position = Vector2( -960, 600 )
nodes/fragment/15/node = SubResource( 18 )
nodes/fragment/15/position = Vector2( -1180, 640 )
nodes/fragment/16/node = SubResource( 21 )
nodes/fragment/16/position = Vector2( -534, 449.25 )
nodes/fragment/17/node = SubResource( 22 )
nodes/fragment/17/position = Vector2( -280, 560 )
nodes/fragment/18/node = SubResource( 23 )
nodes/fragment/18/position = Vector2( -540, 720 )
nodes/fragment/19/node = SubResource( 24 )
nodes/fragment/19/position = Vector2( -886, 545.25 )
nodes/fragment/20/node = SubResource( 25 )
nodes/fragment/20/position = Vector2( -20, 500 )
nodes/fragment/26/node = SubResource( 31 )
nodes/fragment/26/position = Vector2( 280, 120 )
nodes/fragment/28/node = SubResource( 33 )
nodes/fragment/28/position = Vector2( 760, 280 )
nodes/fragment/29/node = SubResource( 34 )
nodes/fragment/29/position = Vector2( 580, 280 )
nodes/fragment/30/node = SubResource( 35 )
nodes/fragment/30/position = Vector2( -180, 80 )
nodes/fragment/31/node = SubResource( 36 )
nodes/fragment/31/position = Vector2( -440, 60 )
nodes/fragment/32/node = SubResource( 37 )
nodes/fragment/32/position = Vector2( -440, 140 )
nodes/fragment/35/node = SubResource( 42 )
nodes/fragment/35/position = Vector2( 200, 680 )
nodes/fragment/36/node = SubResource( 43 )
nodes/fragment/36/position = Vector2( 360, 300 )
nodes/fragment/connections = PoolIntArray( 14, 0, 13, 1, 15, 0, 14, 0, 13, 0, 16, 0, 16, 0, 17, 0, 18, 0, 17, 1, 19, 0, 13, 0, 12, 0, 20, 0, 17, 0, 20, 1, 20, 0, 11, 0, 31, 0, 30, 0, 32, 0, 30, 1, 29, 0, 28, 0, 35, 0, 29, 2, 11, 0, 36, 0, 36, 0, 29, 1, 26, 0, 29, 0, 30, 0, 36, 1, 28, 0, 0, 5, 26, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/ratio = 0.5

[sub_resource type="Animation" id=2]
resource_name = "appear"
tracks/0/type = "value"
tracks/0/path = NodePath("mesh:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 1.2, 1.2, 1.2 ), Vector3( 1, 1, 1 ) ]
}

[node name="segment" type="Spatial"]
script = ExtResource( 1 )

[node name="mesh" type="MeshInstance" parent="."]
cast_shadow = 0
mesh = SubResource( 1 )
material/0 = SubResource( 5 )

[node name="animation" type="AnimationPlayer" parent="."]
playback_speed = 3.0
anims/appear = SubResource( 2 )
