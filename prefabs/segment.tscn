[gd_scene load_steps=34 format=2]

[ext_resource path="res://scripts/segment.gd" type="Script" id=1]
[ext_resource path="res://images/space_3.png" type="Texture" id=2]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 2.0

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=9]

[sub_resource type="VisualShaderNodeVectorOp" id=10]

[sub_resource type="VisualShaderNodeVectorOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=20]
constant = 0.05

[sub_resource type="VisualShaderNodeVectorOp" id=21]
output_port_for_preview = 0
operator = 5

[sub_resource type="VisualShaderNodeScalarConstant" id=22]
constant = 7.0

[sub_resource type="VisualShaderNodeVectorOp" id=23]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=24]
constant = 2000.0

[sub_resource type="VisualShaderNodeTexture" id=2]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarConstant" id=32]
constant = 0.7

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, -0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=34]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "screen_uv"

[sub_resource type="OpenSimplexNoise" id=35]
seed = 10
octaves = 1

[sub_resource type="NoiseTexture" id=36]
seamless = true
noise = SubResource( 35 )

[sub_resource type="VisualShaderNodeTexture" id=37]
texture = SubResource( 36 )

[sub_resource type="VisualShaderNodeVectorOp" id=38]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="OpenSimplexNoise" id=13]
octaves = 1

[sub_resource type="NoiseTexture" id=14]
seamless = true
noise = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = SubResource( 14 )

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=17]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
uniform sampler2D tex_frg_6;uniform sampler2D tex_frg_30;uniform sampler2D tex_frg_2;


void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(SCREEN_UV,0.0);

// Input:11
	vec3 n_out11p0;
	n_out11p0 = vec3(SCREEN_UV,0.0);

// Input:4
	float n_out4p0;
	n_out4p0 = TIME;

// ScalarOp:5
	float n_in5p1 = 0.01000;
	float n_out5p0;
	n_out5p0 = n_out4p0 * n_in5p1;

// VectorOp:12
	vec3 n_out12p0;
	n_out12p0 = n_out11p0 + vec3(n_out5p0);

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	vec4 tex_frg_6_read = texture( tex_frg_6 , n_out12p0.xy );
	n_out6p0 = tex_frg_6_read.rgb;
	n_out6p1 = tex_frg_6_read.a;

// ScalarOp:28
	float n_in28p1 = -0.01000;
	float n_out28p0;
	n_out28p0 = n_out4p0 * n_in28p1;

// VectorOp:29
	vec3 n_out29p0;
	n_out29p0 = n_out11p0 + vec3(n_out28p0);

// Texture:30
	vec3 n_out30p0;
	float n_out30p1;
	vec4 tex_frg_30_read = texture( tex_frg_30 , n_out29p0.xy );
	n_out30p0 = tex_frg_30_read.rgb;
	n_out30p1 = tex_frg_30_read.a;

// VectorOp:31
	vec3 n_out31p0;
	n_out31p0 = n_out6p0 * n_out30p0;

// Scalar:8
	float n_out8p0;
	n_out8p0 = 0.500000;

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = n_out31p0 - vec3(n_out8p0);

// Scalar:10
	float n_out10p0;
	n_out10p0 = 2.000000;

// VectorOp:9
	vec3 n_out9p0;
	n_out9p0 = n_out7p0 * vec3(n_out10p0);

// Scalar:15
	float n_out15p0;
	n_out15p0 = 0.050000;

// VectorOp:14
	vec3 n_out14p0;
	n_out14p0 = n_out9p0 * vec3(n_out15p0);

// VectorOp:13
	vec3 n_out13p0;
	n_out13p0 = n_out3p0 + n_out14p0;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out13p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Scalar:27
	float n_out27p0;
	n_out27p0 = 0.700000;

// Scalar:17
	float n_out17p0;
	n_out17p0 = 7.000000;

// VectorOp:16
	vec3 n_out16p0;
	n_out16p0 = pow( n_out2p0 , vec3(n_out17p0) );

// Scalar:19
	float n_out19p0;
	n_out19p0 = 2000.000122;

// VectorOp:18
	vec3 n_out18p0;
	n_out18p0 = n_out16p0 * vec3(n_out19p0);

// Output:0
	ALBEDO = n_out2p0;
	METALLIC = n_out27p0;
	EMISSION = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1179, -408 )
nodes/fragment/0/position = Vector2( 1240, -80 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 220, 60 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -720, 40 )
nodes/fragment/4/node = SubResource( 11 )
nodes/fragment/4/position = Vector2( -1400, -260 )
nodes/fragment/5/node = SubResource( 12 )
nodes/fragment/5/position = Vector2( -1220, -260 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -640, -380 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( -240, -220 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( -380, -100 )
nodes/fragment/9/node = SubResource( 18 )
nodes/fragment/9/position = Vector2( -40, -220 )
nodes/fragment/10/node = SubResource( 7 )
nodes/fragment/10/position = Vector2( -180, -100 )
nodes/fragment/11/node = SubResource( 8 )
nodes/fragment/11/position = Vector2( -1180, -360 )
nodes/fragment/12/node = SubResource( 9 )
nodes/fragment/12/position = Vector2( -1000, -320 )
nodes/fragment/13/node = SubResource( 10 )
nodes/fragment/13/position = Vector2( 0, 100 )
nodes/fragment/14/node = SubResource( 19 )
nodes/fragment/14/position = Vector2( 260, -160 )
nodes/fragment/15/node = SubResource( 20 )
nodes/fragment/15/position = Vector2( -280, 0 )
nodes/fragment/16/node = SubResource( 21 )
nodes/fragment/16/position = Vector2( 502, 199 )
nodes/fragment/17/node = SubResource( 22 )
nodes/fragment/17/position = Vector2( 200, 420 )
nodes/fragment/18/node = SubResource( 23 )
nodes/fragment/18/position = Vector2( 700, 200 )
nodes/fragment/19/node = SubResource( 24 )
nodes/fragment/19/position = Vector2( 500, 420 )
nodes/fragment/27/node = SubResource( 32 )
nodes/fragment/27/position = Vector2( 780, -80 )
nodes/fragment/28/node = SubResource( 33 )
nodes/fragment/28/position = Vector2( -1220, -140 )
nodes/fragment/29/node = SubResource( 34 )
nodes/fragment/29/position = Vector2( -1000, -200 )
nodes/fragment/30/node = SubResource( 37 )
nodes/fragment/30/position = Vector2( -820, -240 )
nodes/fragment/31/node = SubResource( 38 )
nodes/fragment/31/position = Vector2( -410, -258 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 8, 0, 7, 1, 7, 0, 9, 0, 10, 0, 9, 1, 11, 0, 12, 0, 5, 0, 12, 1, 3, 0, 13, 0, 13, 0, 2, 0, 12, 0, 6, 0, 9, 0, 14, 0, 15, 0, 14, 1, 2, 0, 16, 0, 17, 0, 16, 1, 19, 0, 18, 1, 16, 0, 18, 0, 18, 0, 0, 5, 27, 0, 0, 2, 2, 0, 0, 0, 14, 0, 13, 1, 28, 0, 29, 1, 4, 0, 28, 0, 11, 0, 29, 0, 29, 0, 30, 0, 6, 0, 31, 0, 30, 0, 31, 1, 31, 0, 7, 0 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="Animation" id=5]
tracks/0/type = "value"
tracks/0/path = NodePath("mesh:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 1.2, 1.2, 1.2 ), Vector3( 1, 1, 1 ) ]
}

[node name="segment" type="Spatial"]
script = ExtResource( 1 )

[node name="mesh" type="MeshInstance" parent="."]
cast_shadow = 0
mesh = SubResource( 1 )
material/0 = SubResource( 4 )

[node name="animation" type="AnimationPlayer" parent="."]
playback_speed = 3.0
anims/appear = SubResource( 5 )
