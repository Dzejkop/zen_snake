[gd_scene load_steps=28 format=2]

[ext_resource path="res://scripts/snake.gd" type="Script" id=2]
[ext_resource path="res://scripts/head.gd" type="Script" id=4]

[sub_resource type="SphereMesh" id=1]

[sub_resource type="SpatialMaterial" id=2]
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="CubeMesh" id=3]

[sub_resource type="ShaderMaterial" id=4]

[sub_resource type="Animation" id=5]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("eye:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.6, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0.5, 0.5, 0.5 ), Vector3( 0.6, 0.6, 0.6 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("mesh:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("right_dir:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 0, 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("left_dir:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 0, 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("direction_indicator:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 0, 0, 0 ) ]
}

[sub_resource type="CubeMesh" id=6]
size = Vector3( 0.25, 0.25, 2 )

[sub_resource type="SpatialMaterial" id=7]
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 10.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="CubeMesh" id=8]
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=9]
flags_unshaded = true
albedo_color = Color( 1, 0, 0, 1 )

[sub_resource type="SpatialMaterial" id=10]
flags_unshaded = true
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="CubeMesh" id=11]
size = Vector3( 1.5, 1.5, 1.5 )

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShaderNodeFresnel" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, true, 3, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=14]

[sub_resource type="VisualShaderNodeScalarClamp" id=15]

[sub_resource type="VisualShaderNodeFresnel" id=16]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, false, 3, 3.0 ]

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "view"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=20]
uniform_name = "tint"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "energy"

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShader" id=24]
code = "shader_type spatial;
render_mode depth_test_disable, unshaded, shadows_disabled;

uniform vec4 tint : hint_color;
uniform float energy;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = NORMAL;

// Input:4
	vec3 n_out4p0;
	n_out4p0 = VIEW;

// Fresnel:2
	bool n_in2p2 = false;
	float n_in2p3 = 3.00000;
	float n_out2p0;
	n_out2p0 = n_in2p2 ? (pow(clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in2p3)) : (pow(1.0 - clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in2p3));
// Fresnel:11
	bool n_in11p2 = true;
	float n_in11p3 = 1.00000;
	float n_out11p0;
	n_out11p0 = n_in11p2 ? (pow(clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in11p3)) : (pow(1.0 - clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in11p3));
// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out2p0 + n_out11p0;

// ScalarClamp:13
	float n_in13p1 = 0.00000;
	float n_in13p2 = 1.00000;
	float n_out13p0;
	n_out13p0 = clamp( n_out12p0, n_in13p1, n_in13p2 );

// ScalarOp:9
	float n_in9p1 = 2.00000;
	float n_out9p0;
	n_out9p0 = pow( n_out13p0 , n_in9p1 );

// ColorUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	n_out6p0 = tint.rgb;
	n_out6p1 = tint.a;

// VectorOp:5
	vec3 n_out5p0;
	n_out5p0 = vec3(n_out9p0) * n_out6p0;

// ScalarUniform:8
	float n_out8p0;
	n_out8p0 = energy;

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = n_out5p0 * vec3(n_out8p0);

// ScalarOp:10
	float n_in10p1 = 2.00000;
	float n_out10p0;
	n_out10p0 = pow( n_out13p0 , n_in10p1 );

// Output:0
	ALBEDO = n_out7p0;
	ALPHA = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -561, 92.5 )
flags/depth_test_disable = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1040, 180 )
nodes/fragment/2/node = SubResource( 16 )
nodes/fragment/2/position = Vector2( -280, 180 )
nodes/fragment/3/node = SubResource( 17 )
nodes/fragment/3/position = Vector2( -600, 180 )
nodes/fragment/4/node = SubResource( 18 )
nodes/fragment/4/position = Vector2( -580, 260 )
nodes/fragment/5/node = SubResource( 19 )
nodes/fragment/5/position = Vector2( 660, 280 )
nodes/fragment/6/node = SubResource( 20 )
nodes/fragment/6/position = Vector2( 340, 420 )
nodes/fragment/7/node = SubResource( 21 )
nodes/fragment/7/position = Vector2( 800, 320 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( 640, 460 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( 380, 260 )
nodes/fragment/10/node = SubResource( 12 )
nodes/fragment/10/position = Vector2( 620, 160 )
nodes/fragment/11/node = SubResource( 13 )
nodes/fragment/11/position = Vector2( -280, 320 )
nodes/fragment/12/node = SubResource( 14 )
nodes/fragment/12/position = Vector2( -20, 180 )
nodes/fragment/13/node = SubResource( 15 )
nodes/fragment/13/position = Vector2( 140, 180 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 2, 1, 6, 0, 5, 1, 5, 0, 7, 0, 8, 0, 7, 1, 9, 0, 5, 0, 10, 0, 0, 1, 3, 0, 11, 0, 4, 0, 11, 1, 2, 0, 12, 0, 11, 0, 12, 1, 12, 0, 13, 0, 13, 0, 10, 0, 13, 0, 9, 0, 7, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=25]
shader = SubResource( 24 )
shader_param/tint = Color( 1, 0.43, 0.43, 1 )
shader_param/energy = 10.0

[node name="snake" type="Spatial"]
script = ExtResource( 2 )
t = 0.2

[node name="head" type="Spatial" parent="."]
script = ExtResource( 4 )
start_visible = true

[node name="eye" type="MeshInstance" parent="head"]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, -1 )
cast_shadow = 0
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="mesh" type="MeshInstance" parent="head"]
mesh = SubResource( 3 )
material/0 = SubResource( 4 )

[node name="animation" type="AnimationPlayer" parent="head"]
playback_speed = 2.0
anims/death = SubResource( 5 )

[node name="direction_indicator" type="MeshInstance" parent="head"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.25, 0 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="right_dir" type="MeshInstance" parent="head"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0 )
mesh = SubResource( 8 )
material/0 = SubResource( 9 )

[node name="left_dir" type="MeshInstance" parent="head"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0, 0 )
mesh = SubResource( 8 )
material/0 = SubResource( 10 )

[node name="body" type="Spatial" parent="."]

[node name="indicator" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0 )
cast_shadow = 0
mesh = SubResource( 11 )
material/0 = SubResource( 25 )
[connection signal="on_death" from="." to="head" method="_on_death"]
