[gd_scene load_steps=23 format=2]

[ext_resource path="res://prefabs/snake.tscn" type="PackedScene" id=1]
[ext_resource path="res://scripts/world.gd" type="Script" id=2]
[ext_resource path="res://env.tres" type="Environment" id=3]
[ext_resource path="res://scripts/camera_anchor.gd" type="Script" id=4]
[ext_resource path="res://scripts/env.gd" type="Script" id=5]
[ext_resource path="res://scripts/camera.gd" type="Script" id=6]
[ext_resource path="res://sound/music/Star Commander1.wav" type="AudioStream" id=7]
[ext_resource path="res://scripts/food_spawner.gd" type="Script" id=8]
[ext_resource path="res://materials/distance_2.tres" type="Material" id=9]
[ext_resource path="res://prefabs/particles.tscn" type="PackedScene" id=10]
[ext_resource path="res://scripts/score_displays.gd" type="Script" id=11]
[ext_resource path="res://test.gd" type="Script" id=13]
[ext_resource path="res://scenes/3d_text.tscn" type="PackedScene" id=14]

[sub_resource type="CubeMesh" id=1]
size = Vector3( 24, 24, 24 )
subdivide_width = 2
subdivide_height = 2
subdivide_depth = 2

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 0.91, 0.5733, 0.5733, 1 )
metallic_specular = 1.0

[sub_resource type="CubeMesh" id=3]
material = SubResource( 2 )
size = Vector3( 40, 100, 40 )

[sub_resource type="SpatialMaterial" id=4]
resource_local_to_scene = true
flags_transparent = true
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SpatialMaterial" id=5]
resource_local_to_scene = true
flags_transparent = true
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SpatialMaterial" id=6]
resource_local_to_scene = true
flags_transparent = true
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SpatialMaterial" id=7]
resource_local_to_scene = true
flags_transparent = true
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="GDScript" id=8]
script/source = "extends Node

onready var top := $\"../labels/top\"
onready var bottom := $\"../labels/bottom\"
onready var left := $\"../score_displays/left\"
onready var right := $\"../score_displays/right\"

export var T := 1.0
var _t = 0

const SCORE_MODE := 1
const TEXT_MODE := 2
const GAME_OVER_MODE := 3

var mode = TEXT_MODE

var texts := [\"Press\", \"Space\", \"Start\", \"Game\"]
onready var _text_nodes := [top, left, bottom, right]

var _last_recorded_score := 0

var _q := 0
var _is_shifting := true
var _is_showing_game_over = false

func set_shift_text(new_texts):
    if len(new_texts) != 4:
        pass
    mode = TEXT_MODE
    texts = new_texts
    _q = 0
    _shift_text()

func set_to_update_score():
    mode = SCORE_MODE
    
func set_to_game_over():
    mode = GAME_OVER_MODE

func update_score():
    var snake := $\"../snake\"
    if snake:
        _last_recorded_score = len(snake.tail)
    
        right.set_text(\"Score: \" + str(_last_recorded_score))
        left.set_text(\"Score: \" + str(_last_recorded_score))
        
        top.set_text(\"Hyper\")
        bottom.set_text(\"Snake\")
    

func _process(delta):
    if mode == TEXT_MODE:
        _t -= delta * T
        if _t <= 0:
            _t = T
            if _is_shifting:
                _shift_text()
    elif mode == SCORE_MODE:
        update_score()
    else:
        _t -= delta * T
        if _t <= 0:
            _t = T
            if _is_showing_game_over:
                right.set_text(\"Score: \" + str(_last_recorded_score))
                left.set_text(\"Score: \" + str(_last_recorded_score))
                top.set_text(\"Game\")
                bottom.set_text(\"Press\")
            else:
                right.set_text(\"Score: \" + str(_last_recorded_score))
                left.set_text(\"Score: \" + str(_last_recorded_score))
                top.set_text(\"Over\")
                bottom.set_text(\"Escape\")
            _is_showing_game_over = not _is_showing_game_over
    
func _shift_text():
    var l = len(texts)
    var i = 0
    for text_node in _text_nodes:
        text_node.set_text(texts[(_q + i) % l])
        i += 1
    _q += 1
    _q = _q % l
"

[sub_resource type="GDScript" id=9]
script/source = "extends AudioStreamPlayer


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass
"

[node name="world" type="Spatial"]
script = ExtResource( 2 )
bounds_bb = Vector3( 12, 22, 12 )

[node name="dir_light" type="DirectionalLight" parent="."]
transform = Transform( 0.707107, -0.190559, 0.680946, 0, 0.963003, 0.269491, -0.707107, -0.190559, 0.680946, 9.33, 1.975, 0 )
visible = false
light_energy = 0.46
shadow_enabled = true

[node name="env" type="WorldEnvironment" parent="."]
environment = ExtResource( 3 )
script = ExtResource( 5 )
min_glow_intensity = 0.8

[node name="snake" parent="." instance=ExtResource( 1 )]
t = 0.4

[node name="out_box" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 10, 0 )
cast_shadow = 0
extra_cull_margin = 10.0
mesh = SubResource( 1 )
material/0 = ExtResource( 9 )

[node name="food_spawner" type="Node" parent="."]
script = ExtResource( 8 )
max_food_count = 2

[node name="tower" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.150961, -56.8683, 0.0684319 )
visible = false
mesh = SubResource( 3 )
material/0 = null

[node name="camera_anchor" type="Spatial" parent="."]
transform = Transform( 0.571229, 0, 0.82079, 0, 1, 0, -0.82079, 0, 0.571229, 0, 0, 0 )
script = ExtResource( 4 )

[node name="inner_anchor" type="Spatial" parent="camera_anchor"]
transform = Transform( 1, 2.98023e-08, 2.98023e-08, 0, 0.836573, 0.547855, 0, -0.547855, 0.836573, 3.8147e-06, 34.3602, 38.7637 )

[node name="camera" type="Camera" parent="camera_anchor/inner_anchor"]
transform = Transform( 1, 0, 0, 0, 1, 7.45058e-08, 5.96046e-08, -6.10948e-07, 1, 0, 8.72612e-05, 0.000408173 )
projection = 1
current = true
fov = 55.0
size = 43.0
far = 1000.0
script = ExtResource( 6 )
sway_range = 2.0
lerp_speed = 0.01

[node name="particles" parent="." instance=ExtResource( 10 )]
amount = 500
visibility_aabb = AABB( -25, -25, -25, 50, 50, 50 )

[node name="labels" type="Spatial" parent="."]
script = ExtResource( 13 )

[node name="top" parent="labels" instance=ExtResource( 14 )]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 1, 15.872 )
material/0 = SubResource( 4 )

[node name="bottom" parent="labels" instance=ExtResource( 14 )]
transform = Transform( -1, 2.75358e-07, -2.75357e-07, 0, 0.707107, 0.707107, 3.89414e-07, 0.707107, -0.707107, 0, 1, -15.872 )
material/0 = SubResource( 5 )

[node name="score_displays" type="Spatial" parent="."]
script = ExtResource( 11 )

[node name="left" parent="score_displays" instance=ExtResource( 14 )]
transform = Transform( -1.62921e-07, 0.707107, -0.707107, 0, 0.707107, 0.707107, 1, 1.15202e-07, -1.15202e-07, -15.872, 1, 0 )
material/0 = SubResource( 6 )

[node name="right" parent="score_displays" instance=ExtResource( 14 )]
transform = Transform( -1.62921e-07, -0.707107, 0.707107, 0, 0.707107, 0.707107, -1, 1.15202e-07, -1.15202e-07, 15.872, 1, 0 )
material/0 = SubResource( 7 )

[node name="text_control" type="Node" parent="."]
script = SubResource( 8 )

[node name="light" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 10, 0 )
omni_range = 30.0

[node name="music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 7 )
autoplay = true
script = SubResource( 9 )
[connection signal="on_death" from="snake" to="." method="_on_game_over"]
[connection signal="on_eat_food" from="snake" to="env" method="glow_kick"]
[connection signal="on_eat_food" from="snake" to="food_spawner" method="on_food_eaten"]
