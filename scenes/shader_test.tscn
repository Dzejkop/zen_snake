[gd_scene load_steps=8 format=2]

[ext_resource path="res://env.tres" type="Environment" id=1]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="VisualShaderNodeExpression" id=2]
expression = "vec3 uv = (CAMERA_MATRIX * vec4(VERTEX, 1.0)).xyz;
uv *= n;
vec3 abs_diff = abs(uv - round(uv));
abs_diff -= 0.1;
abs_diff /= 0.1;
abs_diff = clamp(abs_diff, 0, 1);

if (abs_diff.z == 0.0) {
	_out = abs_diff.x * abs_diff.y;
} else if (abs_diff.y == 0.0) {
	_out = abs_diff.x * abs_diff.z;
} else {
	_out = abs_diff.y * abs_diff.z;
}"

[sub_resource type="VisualShaderNodeScalarConstant" id=3]
constant = 2.0

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Scalar:5
	float n_out5p0;
	n_out5p0 = 2.000000;

// Expression:3
	float n_out3p0;
	n_out3p0=0.0;
	{
		vec3 uv = (CAMERA_MATRIX * vec4(VERTEX, 1.0)).xyz;
		uv *= n_out5p0;
		vec3 abs_diff = abs(uv - round(uv));
		abs_diff -= 0.1;
		abs_diff /= 0.1;
		abs_diff = clamp(abs_diff, 0, 1);
		
		if (abs_diff.z == 0.0) {
			n_out3p0 = abs_diff.x * abs_diff.y;
		} else if (abs_diff.y == 0.0) {
			n_out3p0 = abs_diff.x * abs_diff.z;
		} else {
			n_out3p0 = abs_diff.y * abs_diff.z;
		}
	}
// Output:0
	ALBEDO = vec3(n_out3p0);
	EMISSION = vec3(n_out3p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -707, 56 )
nodes/fragment/0/position = Vector2( 420, 100 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -280, 80 )
nodes/fragment/3/size = Vector2( 549, 535 )
nodes/fragment/3/input_ports = "0,0,n;"
nodes/fragment/3/output_ports = "0,0,_out;"
nodes/fragment/3/expression = "vec3 uv = (CAMERA_MATRIX * vec4(VERTEX, 1.0)).xyz;
uv *= n;
vec3 abs_diff = abs(uv - round(uv));
abs_diff -= 0.1;
abs_diff /= 0.1;
abs_diff = clamp(abs_diff, 0, 1);

if (abs_diff.z == 0.0) {
	_out = abs_diff.x * abs_diff.y;
} else if (abs_diff.y == 0.0) {
	_out = abs_diff.x * abs_diff.z;
} else {
	_out = abs_diff.y * abs_diff.z;
}"
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( -540, 220 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 3, 0, 0, 5, 5, 0, 3, 0 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[sub_resource type="PlaneMesh" id=6]
size = Vector2( 10, 10 )

[node name="root" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
material/0 = SubResource( 5 )

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.41891, 0 )
mesh = SubResource( 6 )
material/0 = null

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4.81257 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.788022, 2.34849e-08, -0.615648, 0.223735, 0.931628, 0.286378, 0.573555, -0.363414, 0.734143, 0, 0, 0 )
shadow_enabled = true
